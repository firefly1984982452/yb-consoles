import types from "../store/types";
import login from "../components/login";
import permission from "../libs/permission";

const routes = [
  {
    path: "/proxy/login",
    name: "PassportLogin",
    meta: { title: "登录", allow: "*" },
    component: login,
    props: true
  }
];

const beforeEach = function (store, settings, to, from, next) {
  if (!store) {
    next();
    return;
  }
  store.commit(types.SetLoadingStatus, {
    isLoading: true
  });
  if (to.matched && to.matched.length > 0) { //已匹配到路径了
    let allow = to.meta ? to.meta.allow : undefined;
    if (!allow && settings) {
      allow = settings.defaultAllow;
    }
    let currentUser = store.getters[types.GetCurrentUser];
    if (allow && allow !== "*") {
      if (!currentUser || currentUser.userId <= 0) { // 用户未登录，则跳转到登录页
        next({
          name: "PassportLogin",
          query: { redirect: window.location.href }
        });
        return;
      } else if (allow !== "?" && !permission.hasPermission(allow)) { // 判断是否有无访问
        // 无权限访问
        next({ name: "403" });
        return;
      }
    }
  }
  next();
};

const afterEach = function(store, settings, to) {
  if(store) {
    store.commit(types.SetLoadingStatus, { isLoading: false });    
  }

  let t = to.meta ? to.meta.title : null;
  if(!t) {
    t = to.name;
  }
  let title = settings ? settings.title : null;
  if (t) {
    if(title) {
      t = t + " - " + title;
    }
  } else {
    t = title;
  }
  if(t) {
    window.document.title = t;
  }
};

const install = function (Vue, options = {}) {
  let router = options.router;
  if (!router) {
    return;
  }

  let store = options.store;
  let settings = options.settings;

  if (!options.withoutRoutes) {
    router.addRoutes(routes);
  }

  router.beforeEach(function (to, from, next) {
    beforeEach(store, settings, to, from, next);
  });
  router.afterEach(function (to) {
    afterEach(store, settings, to);
  });
}

export default {
  install
};
